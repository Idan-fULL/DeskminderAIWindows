<Window x:Class="DeskminderAI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DeskminderAI"
        xmlns:viewmodels="clr-namespace:DeskminderAI.ViewModels"
        xmlns:converters="clr-namespace:DeskminderAI.Converters"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="DeskminderAI" 
        Height="50" 
        Width="50"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        Topmost="True"
        Loaded="Window_Loaded"
        MouseDown="Window_MouseDown"
        Closing="Window_Closing">
    
    <Window.Resources>
        <converters:SliderValueToWidthConverter x:Key="SliderValueToWidthConverter"/>
        <viewmodels:MainViewModel x:Key="MainVM"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Gradient brushes -->
        <LinearGradientBrush x:Key="GreenGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#4CAF50" Offset="0"/>
            <GradientStop Color="#2d682f" Offset="1"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="DarkGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#333" Offset="0"/>
            <GradientStop Color="#222" Offset="1"/>
        </LinearGradientBrush>
        
        <DropShadowEffect x:Key="ButtonShadow" 
                          ShadowDepth="3" 
                          Direction="270"
                          Color="Black" 
                          Opacity="0.3" 
                          BlurRadius="8"/>
        
        <!-- Add Button Style -->
        <Style x:Key="AddButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="42"/>
            <Setter Property="Height" Value="42"/>
            <Setter Property="Background" Value="{StaticResource GreenGradientBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Effect" Value="{StaticResource ButtonShadow}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" 
                                    Width="{TemplateBinding Width}" 
                                    Height="{TemplateBinding Height}"/>
                            
                            <Path Data="M12,3 L13.5,8.5 L19,10 L13.5,11.5 L12,17 L10.5,11.5 L5,10 L10.5,8.5 Z" 
                                  Fill="White" 
                                  Width="24" 
                                  Height="24"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                            To="1.1" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                            To="1.1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                            To="1" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                            To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Close Button Style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Background" Value="#000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" 
                                    Width="{TemplateBinding Width}" 
                                    Height="{TemplateBinding Height}"/>
                            <TextBlock Text="×" 
                                      Foreground="White" 
                                      FontSize="12"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Confirm Button Style -->
        <Style x:Key="ConfirmButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Background" Value="{StaticResource GreenGradientBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" 
                                    Width="{TemplateBinding Width}" 
                                    Height="{TemplateBinding Height}"/>
                            <TextBlock Text="✓" 
                                      Foreground="White" 
                                      FontSize="14"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        </Style>
        
        <!-- Reminder Button Style -->
        <Style x:Key="ReminderButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="{StaticResource DarkGradientBrush}"/>
            <Setter Property="Effect" Value="{StaticResource ButtonShadow}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" 
                                    Width="{TemplateBinding Width}" 
                                    Height="{TemplateBinding Height}"/>
                            <ContentPresenter HorizontalAlignment="Center" 
                                             VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Window.DataContext>
        <StaticResource ResourceKey="MainVM"/>
    </Window.DataContext>
    
    <Grid x:Name="RootGrid">
        <!-- States -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AppStates">
                <!-- Icon Only State -->
                <VisualState x:Name="IconOnlyState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AddButtonOnly" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimerPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ReminderPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveRemindersPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <!-- Timer State -->
                <VisualState x:Name="TimerState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AddButtonOnly" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimerPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ReminderPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveRemindersPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <!-- Reminder Name State -->
                <VisualState x:Name="ReminderState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AddButtonOnly" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimerPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ReminderPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveRemindersPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <!-- Main Container -->
        <StackPanel Orientation="Vertical" Spacing="12">
            <!-- Floating Add Button (Icon-only mode) -->
            <Button x:Name="AddButtonOnly" 
                    Style="{StaticResource AddButtonStyle}"
                    Visibility="Visible"
                    Click="AddButtonOnly_Click"
                    ToolTip="Add Reminder" />
            
            <!-- Timer Selection Panel -->
            <Border x:Name="TimerPanel"
                    Background="#333333"
                    CornerRadius="20"
                    Width="170"
                    Height="40"
                    Visibility="Collapsed"
                    Effect="{StaticResource ButtonShadow}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Close Button -->
                    <Button Grid.Column="0" 
                            Style="{StaticResource CloseButtonStyle}"
                            Margin="8,0,0,0"
                            Click="CloseTimer_Click"/>
                    
                    <!-- Timer Display and Drag Area -->
                    <Grid Grid.Column="1" 
                          x:Name="TimerDragCanvas"
                          Background="#444444"
                          Cursor="SizeWE"
                          ToolTip="Drag to change minutes"
                          MouseDown="TimerDragCanvas_MouseDown"
                          MouseMove="TimerDragCanvas_MouseMove"
                          MouseUp="TimerDragCanvas_MouseUp">
                        
                        <!-- Timer Text -->
                        <TextBlock x:Name="TimerValueText" 
                                   Text="{Binding NewReminderMinutes, StringFormat='{}{0} min'}" 
                                   Foreground="White"
                                   FontSize="14"
                                   FontWeight="Bold"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Grid>
                    
                    <!-- Next Button -->
                    <Button Grid.Column="2" 
                            Style="{StaticResource ConfirmButtonStyle}"
                            Margin="0,0,8,0"
                            Click="NextToReminder_Click"/>
                </Grid>
            </Border>
            
            <!-- Reminder Name Panel -->
            <Border x:Name="ReminderPanel"
                    Background="#333333"
                    CornerRadius="20"
                    Width="240"
                    Height="40"
                    Visibility="Collapsed"
                    Effect="{StaticResource ButtonShadow}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Back Button -->
                    <Button Grid.Column="0" 
                            Style="{StaticResource CloseButtonStyle}"
                            Margin="8,0,0,0"
                            Click="BackToTimer_Click"/>
                    
                    <!-- Reminder Name Input -->
                    <TextBox Grid.Column="1"
                             Text="{Binding NewReminderName, UpdateSourceTrigger=PropertyChanged}"
                             VerticalAlignment="Center"
                             Margin="5,0"
                             Foreground="White"
                             Background="Transparent"
                             BorderThickness="0"
                             FontSize="14"
                             FontFamily="Segoe UI"
                             CaretBrush="White">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border Background="{TemplateBinding Background}" 
                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                <ScrollViewer x:Name="PART_ContentHost"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    
                    <!-- Add Reminder Button -->
                    <Button Grid.Column="2" 
                            Style="{StaticResource ConfirmButtonStyle}"
                            Margin="0,0,8,0"
                            Click="AddReminder_Click"/>
                </Grid>
            </Border>
            
            <!-- Active Reminders Panel -->
            <StackPanel x:Name="ActiveRemindersPanel"
                       Orientation="Vertical"
                       Spacing="12"
                       HorizontalAlignment="Center"
                       Visibility="Visible">
                <!-- Reminders will be added here dynamically -->
                <ItemsControl ItemsSource="{Binding Reminders}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,6,0,0">
                                <Button Style="{StaticResource ReminderButtonStyle}" Tag="{Binding Id}">
                                    <TextBlock Text="{Binding TimeLeft}" 
                                              Foreground="White" 
                                              FontSize="12"
                                              FontWeight="Bold"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Button>
                                <Button Style="{StaticResource CloseButtonStyle}" 
                                       HorizontalAlignment="Right" 
                                       VerticalAlignment="Top" 
                                       Margin="-8,-8,0,0"
                                       Tag="{Binding Id}"
                                       Click="RemoveReminderButton_Click"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </StackPanel>
        
        <!-- System Tray Icon -->
        <tb:TaskbarIcon x:Name="TaskbarIcon"
                       ToolTipText="DeskminderAI"
                       TrayLeftMouseDown="TaskbarIcon_TrayLeftMouseDown"
                       Visibility="Visible">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Exit" Click="ExitMenuItem_Click"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</Window> 