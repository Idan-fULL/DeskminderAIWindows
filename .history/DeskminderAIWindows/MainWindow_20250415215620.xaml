<Window x:Class="DeskminderAI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DeskminderAI"
        xmlns:viewmodels="clr-namespace:DeskminderAI.ViewModels"
        xmlns:converters="clr-namespace:DeskminderAI.Converters"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="DeskminderAI" 
        Height="Auto" 
        Width="Auto"
        SizeToContent="WidthAndHeight"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="NoResize"
        ShowInTaskbar="True"
        Topmost="True"
        Loaded="Window_Loaded"
        MouseDown="Window_MouseDown"
        Closing="Window_Closing">
    
    <Window.Resources>
        <converters:SliderValueToWidthConverter x:Key="SliderValueToWidthConverter"/>
        <viewmodels:MainViewModel x:Key="MainVM"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Gradient brushes -->
        <SolidColorBrush x:Key="MainBackgroundBrush" Color="#222222"/>
        <SolidColorBrush x:Key="TimerBackgroundBrush" Color="#333333"/>
        <SolidColorBrush x:Key="TimerTextBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ActiveReminderBrush" Color="#222222"/>
        <SolidColorBrush x:Key="AddButtonBrush" Color="#0D47A1"/>
        <SolidColorBrush x:Key="CloseButtonBrush" Color="#C62828"/>
        <SolidColorBrush x:Key="ConfirmButtonBrush" Color="#0D47A1"/>
        <SolidColorBrush x:Key="ReminderTextBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ReminderTimeBrush" Color="#AAAAAA"/>
        
        <!-- Animation Storyboards -->
        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                           From="0" To="1" Duration="0:0:0.3">
                <DoubleAnimation.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        
        <!-- Updated ButtonShadow effect -->
        <DropShadowEffect x:Key="ButtonShadow" 
                          ShadowDepth="1" 
                          Direction="270"
                          Color="Black" 
                          Opacity="0.3" 
                          BlurRadius="3"/>
        
        <!-- Blur effect for background when timer selection is active -->
        <BlurEffect x:Key="BackgroundBlurEffect" Radius="5"/>
        
        <!-- Semi-transparent overlay for background when timer selection is active -->
        <SolidColorBrush x:Key="BackgroundOverlayBrush" Color="#80000000"/>
        
        <!-- Add animation easing function -->
        <QuadraticEase x:Key="EaseOutQuad" EasingMode="EaseOut"/>
        
        <!-- Updated Add Button Style -->
        <Style x:Key="AddButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="48"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Background" Value="{StaticResource AddButtonBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ButtonBackground" Fill="{TemplateBinding Background}">
                                <Ellipse.Effect>
                                    <DropShadowEffect x:Name="ButtonShadow" 
                                                    ShadowDepth="2" 
                                                    Direction="270" 
                                                    Color="Black" 
                                                    Opacity="0.3" 
                                                    BlurRadius="4"/>
                                </Ellipse.Effect>
                                <Ellipse.RenderTransform>
                                    <ScaleTransform CenterX="24" CenterY="24" ScaleX="1" ScaleY="1"/>
                                </Ellipse.RenderTransform>
                                <Ellipse.Triggers>
                                    <EventTrigger RoutedEvent="Ellipse.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                    From="0.92" To="1.05" Duration="0:0:1.8"
                                                    AutoReverse="True">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                    From="0.92" To="1.05" Duration="0:0:1.8"
                                                    AutoReverse="True">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Effect.BlurRadius"
                                                    From="2" To="8" Duration="0:0:1.8"
                                                    AutoReverse="True">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Effect.Opacity"
                                                    From="0.2" To="0.6" Duration="0:0:1.8"
                                                    AutoReverse="True">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Ellipse.Triggers>
                            </Ellipse>
                            <Canvas Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <!-- Sparkles Icon -->
                                <Path x:Name="SparkleCenter" 
                                      Data="M12,2 L14,10 L22,12 L14,14 L12,22 L10,14 L2,12 L10,10 Z" 
                                      Fill="White"
                                      Stroke="White"
                                      StrokeThickness="0.5">
                                    <Path.RenderTransform>
                                        <ScaleTransform CenterX="12" CenterY="12" ScaleX="0.9" ScaleY="0.9"/>
                                    </Path.RenderTransform>
                                    <Path.Effect>
                                        <DropShadowEffect ShadowDepth="0" Color="White" Opacity="0.6" BlurRadius="4"/>
                                    </Path.Effect>
                                    <Path.Triggers>
                                        <EventTrigger RoutedEvent="Path.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard RepeatBehavior="Forever">
                                                    <!-- Breathing animation -->
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                        From="0.8" To="1.2" Duration="0:0:1.5"
                                                        AutoReverse="True" 
                                                        RepeatBehavior="Forever">
                                                        <DoubleAnimation.EasingFunction>
                                                            <SineEase EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                        From="0.8" To="1.2" Duration="0:0:1.5"
                                                        AutoReverse="True" 
                                                        RepeatBehavior="Forever">
                                                        <DoubleAnimation.EasingFunction>
                                                            <SineEase EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <!-- Pulse glow effect -->
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="Effect.Opacity"
                                                        From="0.3" To="0.9" Duration="0:0:1.5"
                                                        AutoReverse="True" 
                                                        RepeatBehavior="Forever"/>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="Effect.BlurRadius"
                                                        From="2" To="10" Duration="0:0:1.5"
                                                        AutoReverse="True" 
                                                        RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Path.Triggers>
                                </Path>
                                
                                <!-- Small Sparkle Top Left -->
                                <Path x:Name="SparkleTopLeft" 
                                      Data="M6,6 L7,4 L8,6 L10,7 L8,8 L6,10 L5,8 L3,7 L5,6 Z" 
                                      Fill="White"
                                      Opacity="0.9">
                                    <Path.RenderTransform>
                                        <RotateTransform CenterX="6.5" CenterY="7" Angle="0"/>
                                    </Path.RenderTransform>
                                    <Path.Triggers>
                                        <EventTrigger RoutedEvent="Path.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard RepeatBehavior="Forever">
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                                        From="0" To="360" Duration="0:0:6"/>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="Opacity"
                                                        From="0.6" To="1" Duration="0:0:2"
                                                        AutoReverse="True"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Path.Triggers>
                                </Path>
                                
                                <!-- Small Sparkle Bottom Right -->
                                <Path x:Name="SparkleBottomRight" 
                                      Data="M18,18 L19,16 L20,18 L22,19 L20,20 L18,22 L17,20 L15,19 L17,18 Z" 
                                      Fill="White"
                                      Opacity="0.9">
                                    <Path.RenderTransform>
                                        <RotateTransform CenterX="18.5" CenterY="19" Angle="0"/>
                                    </Path.RenderTransform>
                                    <Path.Triggers>
                                        <EventTrigger RoutedEvent="Path.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard RepeatBehavior="Forever">
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                                        From="0" To="-360" Duration="0:0:7"/>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="Opacity"
                                                        From="0.5" To="0.9" Duration="0:0:2.5"
                                                        AutoReverse="True"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Path.Triggers>
                                </Path>
                                
                                <!-- Small Sparkle Bottom Left -->
                                <Path x:Name="SparkleBottomLeft" 
                                      Data="M5,17 L6,15 L7,17 L9,18 L7,19 L5,21 L4,19 L2,18 L4,17 Z" 
                                      Fill="White"
                                      Opacity="0.8">
                                    <Path.RenderTransform>
                                        <RotateTransform CenterX="5.5" CenterY="18" Angle="15"/>
                                    </Path.RenderTransform>
                                    <Path.Triggers>
                                        <EventTrigger RoutedEvent="Path.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard RepeatBehavior="Forever">
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                                        From="15" To="375" Duration="0:0:5"/>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="Opacity"
                                                        From="0.4" To="0.8" Duration="0:0:1.8"
                                                        AutoReverse="True"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Path.Triggers>
                                </Path>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBackground" Property="Fill" Value="#2196F3"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterX="24" CenterY="24" ScaleX="1.08" ScaleY="1.08"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ButtonBackground" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="3" Direction="270" Color="#0D47A1" Opacity="0.5" BlurRadius="8"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Close Button Style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Background" Value="{StaticResource CloseButtonBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="Black" />
                            <TextBlock Text="✖" 
                                       FontSize="{TemplateBinding FontSize}" 
                                       Foreground="{TemplateBinding Foreground}" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center"
                                       Margin="0,0,0,1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Confirm Button Style -->
        <Style x:Key="ConfirmButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Background" Value="{StaticResource ConfirmButtonBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" Effect="{StaticResource ButtonShadow}"/>
                            <TextBlock Text="✓" 
                                       FontSize="14" 
                                       FontWeight="Bold"
                                       Foreground="{TemplateBinding Foreground}" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center"
                                       Margin="0,1,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Timer Display Style -->
        <Style x:Key="TimerDisplayStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        
        <!-- Timer Container Style - for the Border that contains timer elements -->
        <Style x:Key="TimerContainerStyle" TargetType="Border">
            <Setter Property="Background" Value="#CC0D47A1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="10,6,10,6"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2" 
                                    Direction="270"
                                    Color="Black" 
                                    Opacity="0.4" 
                                    BlurRadius="6"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#CC1565C0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Countdown Timer Style -->
        <Style x:Key="CountdownTimerStyle" TargetType="Border">
            <Setter Property="Background" Value="#CC0D47A1"/>
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="Width" Value="42"/>
            <Setter Property="Height" Value="42"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2" 
                                    Direction="270"
                                    Color="Black" 
                                    Opacity="0.3" 
                                    BlurRadius="4"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Sparkle Ring Style for Reminders -->
        <Style x:Key="SparkleRingStyle" TargetType="Ellipse">
            <Setter Property="Stroke" Value="White"/>
            <Setter Property="StrokeThickness" Value="2.0"/>
            <Setter Property="Fill" Value="Transparent"/>
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" 
                                    Direction="0" 
                                    Color="White" 
                                    Opacity="0.7" 
                                    BlurRadius="5"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Ellipse.Loaded">
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimation 
                                Storyboard.TargetProperty="StrokeThickness"
                                From="1.8" To="2.5" Duration="0:0:1.2"
                                AutoReverse="True">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation 
                                Storyboard.TargetProperty="Effect.Opacity"
                                From="0.5" To="0.9" Duration="0:0:1.2"
                                AutoReverse="True">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation 
                                Storyboard.TargetProperty="Effect.BlurRadius"
                                From="3" To="7" Duration="0:0:1.2"
                                AutoReverse="True">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Item Template for Reminders -->
        <DataTemplate x:Key="ReminderTemplate">
            <Canvas Width="70" Height="120" Background="Transparent">
                <!-- Main container for the reminder circle -->
                <Grid x:Name="ReminderContainer" 
                      MouseEnter="ReminderContainer_MouseEnter" 
                      MouseLeave="ReminderContainer_MouseLeave"
                      MouseLeftButtonDown="ReminderContainer_MouseLeftButtonDown"
                      MouseMove="ReminderContainer_MouseMove"
                      MouseLeftButtonUp="ReminderContainer_MouseLeftButtonUp"
                      Canvas.Left="12"
                      Canvas.Top="25"
                      Width="46" 
                      Height="46"
                      Panel.ZIndex="1"
                      Cursor="Hand"
                      Tag="{Binding Id}">
                    
                    <!-- Timer Circle -->
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <!-- Sparkling Ring - מעגל זוהר אחיד -->
                        <Ellipse Style="{StaticResource SparkleRingStyle}"/>
                        
                        <!-- Background circle -->
                        <Ellipse Width="34" Height="34" Fill="#CC0D47A1"/>
                        
                        <!-- Text Display -->
                        <TextBlock Text="{Binding TimeLeftDisplay}" 
                                  Foreground="White" 
                                  FontSize="12"
                                  FontFamily="Bahnschrift"
                                  FontWeight="SemiBold"
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"
                                  TextAlignment="Center"
                                  TextWrapping="NoWrap"/>
                    </Grid>
                </Grid>
                
                <!-- Delete Button - positioned outside the Grid for better clickability -->
                <Button x:Name="DeleteButton"
                        Style="{StaticResource CloseButtonStyle}"
                        Canvas.Left="38"
                        Canvas.Top="14"
                        Width="18"
                        Height="18"
                        Panel.ZIndex="5"
                        Visibility="Collapsed"
                        Tag="{Binding Id}"
                        Click="RemoveReminderButton_Click" />
                
                <!-- Reminder bubble with absolute positioning using Canvas -->
                <Border x:Name="ReminderText"
                        Canvas.Left="5"
                        Canvas.Top="75"
                        Width="60"
                        MaxWidth="120"
                        Background="#CC0D47A1"
                        CornerRadius="8"
                        Padding="8,6,8,6"
                        Visibility="Collapsed"
                        Panel.ZIndex="2">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                            <TranslateTransform Y="-5"/>
                        </TransformGroup>
                    </Border.RenderTransform>
                    <Border.Triggers>
                        <EventTrigger RoutedEvent="Border.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="Opacity" 
                                        From="0" To="1" Duration="0:0:0.3"/>
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" 
                                        From="0.8" To="1" Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" 
                                        From="0.8" To="1" Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="RenderTransform.Children[1].Y" 
                                        From="-10" To="0" Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Border.Triggers>
                    <StackPanel>
                        <!-- Reminder Name -->
                        <TextBlock Text="{Binding Name}" 
                                   Foreground="White"
                                   FontSize="11"
                                   FontFamily="Bahnschrift"
                                   FontWeight="SemiBold"
                                   TextWrapping="Wrap"
                                   TextTrimming="CharacterEllipsis"
                                   MaxWidth="104"
                                   TextAlignment="Center"
                                   Margin="2,0,2,0"/>
                        
                        <!-- Separator Line -->
                        <Border Height="1" 
                                Background="#80FFFFFF" 
                                Margin="2,2,2,2" 
                                Opacity="0.6"/>
                        
                        <!-- Target Time -->
                        <TextBlock Text="{Binding EndTime, StringFormat='{}{0:HH:mm}'}" 
                                   Foreground="#E0E0FF"
                                   FontSize="10"
                                   FontFamily="Bahnschrift" 
                                   FontWeight="SemiBold"
                                   TextAlignment="Center"
                                   Margin="2,0,2,0"/>
                    </StackPanel>
                </Border>
                
                <!-- MinBubble - using absolute positioning -->
                <Border x:Name="MinutesBubble"
                        Canvas.Left="5"
                        Canvas.Top="75"
                        Background="#CC0D47A1"
                        CornerRadius="12"
                        Padding="10,6,10,6"
                        Visibility="Collapsed"
                        Panel.ZIndex="2">
                    <TextBlock Text="{Binding DisplayTime}"
                               Foreground="White"
                               FontSize="12"
                               FontFamily="Bahnschrift"
                               FontWeight="SemiBold"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               TextAlignment="Center"
                               TextWrapping="NoWrap"
                               Margin="3,0,3,0"/>
                </Border>
            </Canvas>
        </DataTemplate>
    </Window.Resources>
    
    <Window.DataContext>
        <StaticResource ResourceKey="MainVM"/>
    </Window.DataContext>
    
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                   From="0" To="1" Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <QuadraticEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    
    <!-- Main Grid with initial opacity 1 -->
    <Grid x:Name="MainContentGrid" Opacity="1">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Main Content Grid - will be blurred when timer selection is active -->
        <Grid Grid.RowSpan="2" Panel.ZIndex="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Left Section: App Icon -->
            <Button x:Name="AddButtonOnly" 
                    Grid.Column="0"
                    Style="{StaticResource AddButtonStyle}"
                    Visibility="Visible"
                    Click="AddButtonOnly_Click"
                    MouseLeftButtonDown="AddButton_MouseLeftButtonDown"
                    MouseMove="AddButton_MouseMove"
                    MouseLeftButtonUp="AddButton_MouseLeftButtonUp"
                    MouseDoubleClick="AddButton_MouseDoubleClick"
                    Cursor="SizeAll"
                    VerticalAlignment="Center"
                    ToolTip="Add Reminder (Drag to move, Double-click to collapse/expand)" />
            
            <!-- Right Section: Reminders -->
            <ScrollViewer Grid.Column="1" 
                          x:Name="RemindersScrollViewer"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalAlignment="Center"
                          Margin="5,0,0,0">
                <ItemsControl x:Name="ListReminders" 
                              ItemsSource="{Binding Reminders, UpdateSourceTrigger=PropertyChanged}"
                              Margin="0,0,10,0"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              HorizontalContentAlignment="Right"
                              ItemTemplate="{StaticResource ReminderTemplate}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" 
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Right"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="2,0,2,0"/>
                            <Setter Property="Height" Value="46"/>
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
        
        <!-- Background overlay (initially hidden) -->
        <Grid x:Name="BackgroundOverlay" 
              Grid.RowSpan="2" 
              Background="{StaticResource BackgroundOverlayBrush}"
              Visibility="Collapsed"
              Panel.ZIndex="10">
        </Grid>
        
        <!-- Timer Selection Display (Initially Hidden) -->
        <Border x:Name="TimerSelectionDisplay"
                Grid.RowSpan="2"
                Style="{StaticResource TimerContainerStyle}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                MinWidth="120"
                Margin="10,10,10,10"
                Visibility="Collapsed"
                MouseDown="TimerDisplay_MouseDown"
                MouseMove="TimerDisplay_MouseMove"
                MouseUp="TimerDisplay_MouseUp"
                Panel.ZIndex="20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Time Text / Input Field -->
                <Grid Grid.Column="0">
                    <!-- Timer Text (Shown during dragging) -->
                    <TextBlock x:Name="TimerValueDisplay"
                              Text="{Binding NewReminderMinutes, StringFormat='{}{0} min'}" 
                              Style="{StaticResource TimerDisplayStyle}"
                              Foreground="{StaticResource TimerTextBrush}" 
                              FontSize="16" 
                              FontWeight="SemiBold"
                              Margin="5,0,5,0"
                              Visibility="Visible"/>
                    
                    <!-- Text Input (For reminder text, initially hidden) -->
                    <TextBox x:Name="ReminderTextInput"
                            Grid.Column="0"
                            Background="Transparent"
                            Foreground="{StaticResource TimerTextBrush}"
                            BorderBrush="Transparent"
                            Margin="5,0,5,0"
                            MinWidth="100"
                            FontSize="16"
                            VerticalContentAlignment="Center"
                            TextAlignment="Left"
                            KeyDown="ReminderTextInput_KeyDown"
                            Visibility="Collapsed"
                            Text=""/>
                </Grid>
                
                <!-- Confirm Button -->
                <Button x:Name="ConfirmTimeButton" 
                        Grid.Column="1" 
                        Style="{StaticResource ConfirmButtonStyle}"
                        Margin="5,0,5,0"
                        Visibility="Collapsed"
                        Click="ConfirmTimeButton_Click"/>
            </Grid>
        </Border>
        
        <!-- System Tray Icon -->
        <tb:TaskbarIcon x:Name="TaskbarIcon"
                       ToolTipText="DeskminderAI"
                       TrayLeftMouseDown="TaskbarIcon_TrayLeftMouseDown"
                       Visibility="Visible">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="ייצוא תזכורות" Click="ExportReminders_Click" />
                    <MenuItem Header="הגדרות" />
                    <Separator />
                    <MenuItem Header="יציאה" Click="ExitMenuItem_Click" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</Window> 